(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{529:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"异步支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步支持"}},[t._v("#")]),t._v(" 异步支持")]),t._v(" "),s("p",[t._v("Dart 库中充满了返回"),s("a",{attrs:{href:"https://api.dart.dev/stable/dart-async/Future-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Future"),s("OutboundLink")],1),t._v("或者"),s("a",{attrs:{href:"https://api.dart.dev/stable/dart-async/Stream-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stream"),s("OutboundLink")],1),t._v("对象的函数。这些函数都是"),s("em",[t._v("异步")]),t._v("的：它们在建立一个可能的耗时操作（像是 I/O 操作）之后才返回，不用等到操作结束。")]),t._v(" "),s("p",[s("code",[t._v("async")]),t._v("和"),s("code",[t._v("await")]),t._v("关键词用来支持异步编程，让你可以和写同步代码类似地去写异步代码。")]),t._v(" "),s("h2",{attrs:{id:"处理-futures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理-futures"}},[t._v("#")]),t._v(" 处理 Futures")]),t._v(" "),s("p",[t._v("当你需要一个已完成的 Future 结果的时候，你有两个方法：")]),t._v(" "),s("ul",[s("li",[t._v("用"),s("code",[t._v("async")]),t._v("和"),s("code",[t._v("await")])]),t._v(" "),s("li",[t._v("用 Future 的 API，在"),s("a",{attrs:{href:"https://dart.dev/guides/libraries/library-tour#future",target:"_blank",rel:"noopener noreferrer"}},[t._v("库教程"),s("OutboundLink")],1),t._v("中有描述。")])]),t._v(" "),s("p",[t._v("用了"),s("code",[t._v("async")]),t._v("和"),s("code",[t._v("await")]),t._v("的带码就是异步的，但是看起来很像同步代码。例如，下面的例子用"),s("code",[t._v("await")]),t._v("来等待异步函数的结果：")]),t._v(" "),s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookUpVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("使用"),s("code",[t._v("await")]),t._v("的前提是函数必须是"),s("code",[t._v("async")]),t._v("的（一个用"),s("code",[t._v("async")]),t._v("标记的函数）：")]),t._v(" "),s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[t._v("Future "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" version "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookUpVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sth")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("Note")]),s("p",[t._v("虽然"),s("code",[t._v("异步函数")]),t._v("可能会执行耗时操作，但是它并不会等待这些操作，相反的，"),s("code",[t._v("异步函数")]),t._v("只有在遇见一个"),s("code",[t._v("await")]),t._v("表达式的时候才会执行（"),s("a",{attrs:{href:"https://github.com/dart-lang/sdk/blob/master/docs/newsletter/20170915.md#synchronous-async-start",target:"_blank",rel:"noopener noreferrer"}},[t._v("详情"),s("OutboundLink")],1),t._v("）。然后返回一个 Future 对象，当"),s("code",[t._v("await")]),t._v("表达式结束的时候才会恢复执行代码。")])]),s("p",[t._v("在使用"),s("code",[t._v("await")]),t._v("的时候可以用"),s("code",[t._v("try")]),t._v("，"),s("code",[t._v("catch")]),t._v("和"),s("code",[t._v("finally")]),t._v("来处理错误，整理代码：")]),t._v(" "),s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  version "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookUpVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在一个"),s("code",[t._v("异步函数")]),t._v("中可以多次调用"),s("code",[t._v("await")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" entrypoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findEntrypoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exitCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runExecutable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entrypoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushThenExit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exitCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在"),s("code",[t._v("await")]),t._v("表达式中，表达式的值一般都是一个 Future，如果不是，这个值会自动被包装成一个 Future。这个 Future 对象承诺会返回一个对象。"),s("code",[t._v("await")]),t._v("表达式的值是返回一个对象，"),s("code",[t._v("await")]),t._v("表达式在这个对象可用之前会暂停执行。")]),t._v(" "),s("p",[s("strong",[t._v("如果用"),s("code",[t._v("await")]),t._v("的时候遇到了编译时错误，确保"),s("code",[t._v("await")]),t._v("是在"),s("code",[t._v("异步函数")]),t._v("中使用的。")]),t._v(" 例如，在一个应用的"),s("code",[t._v("main()")]),t._v("函数中使用"),s("code",[t._v("await")]),t._v("，这个"),s("code",[t._v("main()")]),t._v("必须用"),s("code",[t._v("async")]),t._v("标记：")]),t._v(" "),s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[t._v("Future "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'In main: version is ${await lookUpVersion()}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"声明异步函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明异步函数"}},[t._v("#")]),t._v(" 声明异步函数")]),t._v(" "),s("p",[t._v("异步函数指的是用"),s("code",[t._v("async")]),t._v("标记了函数体的函数。")]),t._v(" "),s("p",[t._v("给一个函数添加"),s("code",[t._v("async")]),t._v("关键词也会让这个函数返回一个 Future 对象，例如，下面的同步函数会返回一个 String，变成异步函数时，因为一个 future 实现是耗时的，返回值也是一个 Future：")]),t._v(" "),s("Tabs",{attrs:{type:"border-card"}},[s("Tab",{attrs:{label:"sync"}},[s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[t._v("String "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookUpVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.0.0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("Tab",{attrs:{label:"async"}},[s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[t._v("Future"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookUpVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1.0.0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])],1),t._v(" "),s("p",[t._v("需要留意的是函数体不需要使用Future的API。如果必要的话Dart会创建Future对象。如果函数没有返回有用的值，确保它返回"),s("code",[t._v("Future<Void>")]),t._v("类型。")]),t._v(" "),s("p",[t._v("有关使用Future、"),s("code",[t._v("async")]),t._v("和"),s("code",[t._v("await")]),t._v("的更多介绍，请参考"),s("a",{attrs:{href:"https://dart.dev/codelabs/async-await",target:"_blank",rel:"noopener noreferrer"}},[t._v("异步编程实验室"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"处理流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理流"}},[t._v("#")]),t._v(" 处理流")]),t._v(" "),s("p",[t._v("当你需要从流中获取值的时候，你有两个选项：")]),t._v(" "),s("ul",[s("li",[t._v("使用"),s("code",[t._v("async")]),t._v("和一个异步for循环（"),s("code",[t._v("await for")]),t._v("）")]),t._v(" "),s("li",[t._v("使用流API，在"),s("a",{attrs:{href:"https://dart.dev/guides/libraries/library-tour#stream",target:"_blank",rel:"noopener noreferrer"}},[t._v("库教程"),s("OutboundLink")],1),t._v("中有描述。")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"title"},[t._v("Note")]),s("p",[t._v("在你使用"),s("code",[t._v("await for")]),t._v("之前，确保代码清晰明确并且你确实想要等待流的所有结果，例如，你通常"),s("strong",[t._v("不")]),t._v("应该在UI监听事件中使用"),s("code",[t._v("await for")]),t._v("，因为UI框架会发送无止境的事件流。")])]),s("p",[t._v("一个异步for循环形式大致如下：")]),t._v(" "),s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("varOrType identifier "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每执行一次流都会发射一个值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("其中"),s("code",[t._v("expression")]),t._v("的值必须是Stream类型的。执行流程如下：")]),t._v(" "),s("ol",[s("li",[t._v("等待流发射一个值")]),t._v(" "),s("li",[t._v("使用发射的值作为变量，执行循环体")]),t._v(" "),s("li",[t._v("重复步骤1和2直到流关闭")])]),t._v(" "),s("p",[t._v("可以在循环中使用"),s("code",[t._v("break")]),t._v("和"),s("code",[t._v("return")]),t._v("语句来停止监听流，跳出循环并取消订阅该流。")]),t._v(" "),s("p",[s("strong",[t._v("如果在使用异步for循环的时候出现了编译时错误，确保"),s("code",[t._v("await for")]),t._v("是在一个异步函数中使用的。")]),t._v(" 例如，在"),s("code",[t._v("main()")]),t._v("函数中使用异步for循环的时候，确保用"),s("code",[t._v("async")]),t._v("来标记"),s("code",[t._v("main()")]),t._v("函数体：")]),t._v(" "),s("div",{staticClass:"language-Dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[t._v("Future "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" request "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" requestServer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("更多异步编程的信息，通常可以参阅库教程中的"),s("a",{attrs:{href:"https://dart.dev/guides/libraries/library-tour#dartasync---asynchronous-programming",target:"_blank",rel:"noopener noreferrer"}},[t._v("dart:async"),s("OutboundLink")],1),t._v("。")])],1)}),[],!1,null,null,null);a.default=e.exports}}]);